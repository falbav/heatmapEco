data
indexLab
indexLab <- quantile(
indexOld, seq(0, 1, length.out = min(
floor(1.375 * N), length(unique(indexOld))) + 1))
indexLab
cut(indexOld, eval(indexLab <- quantile(
indexOld, seq(0, 1, length.out = min(
floor(1.375 * N) + 1, length(unique(indexOld))))))
)
cut(indexOld, eval(indexLab <- quantile(
indexOld, seq(0, 1, length.out = min(
floor(1.375 * N) + 1, length(unique(indexOld)))))))
cut(indexOld, eval(indexLab <- quantile(
indexOld, seq(0, 1, length.out = min(
floor(1.375 * N) + 1, length(unique(indexOld)))))), indexLab)
cut(indexOld, eval(indexLab <- quantile(
indexOld, seq(0, 1, length.out = min(
floor(1.375 * N) + 1, length(unique(indexOld)))))), indexLab[-1])
cut(indexOld, eval(indexLab <- quantile(
indexOld, seq(0, 1, length.out = min(
floor(1.375 * N) + 1, length(unique(indexOld)))))), indexLab[-1])
cut(indexOld, eval(indexLab <- quantile(
indexOld, seq(0, 1, length.out = min(
floor(1.375 * N) + 1, length(unique(indexOld)))))))
cut(indexOld, eval(indexLab <- quantile(
indexOld, seq(0, 1, length.out = min(
floor(1.375 * N), length(unique(indexOld))) + 1))))
indexOld
quantile(indexOld, c(0, 1))
quantile(indexOld, seq(0, 1, 20)
)
quantile(indexOld, seq(0, 1, length.out=20))
devtools::load_all("~/r-library/heatmapEco")
devtools::load_all("~/r-library/heatmapEco")
library(data.table)
b1 <- rep(rnorm(3e3, 0, 0.8), 10)
b2 <- rep(rnorm(3e3, 0, 0.2), 10)
test <- data.table(id=rep(1:3e3, 20), X=c(b1, b2), Y=rnorm(6e4,
c(- b1 / 2, -2.5 * b2), c(rep(1, 3e4), rep(5, 3e4))))
test$t <- as.vector(sapply(1:20, function(x) rep(x, 3e3)))
# Plot using heatmap, dividing instrument "X" in percentiles
heatmapEco(Y ~ CrS(X,id):t, test, N=100, t.per="year", t.fmt="%Y",
pol.break=c(11,16), outliers=TRUE, save="test.pdf")
library(ggplot2)
scale_fill_gradientn
?as.formula
search()
?environment
.GlobalEnv
environmentName("package:ggplot2")
environmentName()
is.environment("package:ggplot2")
?search
?as.formula
is.environment(.GlobalEnv)
is.environment(ggplot2)
is.environment(.ggplot2)
new.env
?new.env
parent.env(scale_fill_gradientn)
environment(scale_fill_gradientn)
is.environment(namespace:ggplot2)
is.environment(.namespace:ggplot2)
is.environment(.(namespace:ggplot2)
)
is.environment("namespace:ggplot2")
?Namespace
?namespace
?asNamespace
isNamespace("ggplot2")
search()
isNamespace("package:ggplot2")
getNamespaceInfo("ggplot2")
as.formula(scale_fill_gradientn)
as.formula(scale_fill_gradientn())
?attach
?attach
library
?attachNamespace
?do.call
?setNames
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
quote("c('dsadas', 'dsadsasa')")
quote(c('dsadas', 'dsadsasa'))
eval("c('dsadas', 'dsadsasa')")
as.vector("c('dsadas', 'dsadsasa')")
strsplit("c('dsadas', 'dsadsasa')", "'\S{2}")
strsplit("c('dsadas', 'dsadsasa')", "'\\S{2}")
strsplit("c('dsadas', 'dsadsasa')", "'\[,\s]{2}")
strsplit("c('dsadas', 'dsadsasa')", "'[,\\s]{2}")
strsplit("c('dsadas', 'dsadsasa')", "'\\[,\\s\\]{2}")
strsplit("c('dsadas', 'dsadsasa')", "'[,\\s]")
strsplit("c('dsadas', 'dsadsasa')", "'[,\\s]+'")
strsplit("c('dsadas', 'dsadsasa')", "'[,\\s]\+'")
strsplit("c('dsadas', 'dsadsasa')", "'[,\\s]+")
strsplit("c('dsadas', 'dsadsasa')", "'[\\,\\s]+")
strsplit("c('dsadas', 'dsadsasa')", "'[,\\s]?")
strsplit("c('dsadas', 'dsadsasa')", "'[,\\s]'")
strsplit("c('dsadas', 'dsadsasa')", "'[,\\s] '")
strsplit("c('dsadas', 'dsadsasa')", "(|)|'[,\\s] '")
strsplit("c('dsadas', 'dsadsasa')", "(|)|('[,\\s] ')")
strsplit("c('dsadas', 'dsadsasa')", "\\(|\\)|('[,\\s] ')")
strsplit("c('dsadas', 'dsadsasa')", "\\('|\\')|('[,\\s] ')")
strsplit("c('dsadas', 'dsadsasa')", "\\('|\\')|('[,\\s]')")
strsplit("c('dsadas', 'dsadsasa')", "\\('|\\')|('[,\\s]+')")
strsplit("c('dsadas', 'dsadsasa')", "\\('|\\')|('[\\,\\s]+')")
strsplit("c('dsadas', 'dsadsasa')", "\\('|\\')|('[,]+')")
strsplit("c('dsadas', 'dsadsasa')", "\\('|\\')|('[,]+')")[1]
strsplit("c('dsadas', 'dsadsasa')", "\\('|\\')|('[,]+')")[2]
strsplit("c('dsadas', 'dsadsasa')", "\\('|\\')|('[,]+')")[3]
?strsplit
strsplit("c('dsadas', 'dsadsasa')", "\\(")
unlist(strsplit("c('dsadas', 'dsadsasa')", "\\("))
strsplit("c('dsadas', 'dsadsasa')", "d")
strsplit("c('dsadas', 'dsadsasa')", "d")[1][1]
?eval
?quote
eval("c('dsadas', 'dsadsasa')")
parse("c('dsadas', 'dsadsasa')")
quote(parse("c('dsadas', 'dsadsasa')"))
eval(parse("c('dsadas', 'dsadsasa')"))
eval(parse(text="c('dsadas', 'dsadsasa')"))
quote(parse(text="c('dsadas', 'dsadsasa')"))
bquote(.(parse(text="c('dsadas', 'dsadsasa')")))
parse(text="c('dsadas', 'dsadsasa')")
library(heatmapEco)
as.yearmon("2008")
zoo::as.yearmon("2008")
library(heatmapEco)
parse(text="c('Jan 2009',' Dec 2009',' Jul 2010')")
eval(parse(text="c('Jan 2009',' Dec 2009',' Jul 2010')"))
c(eval(parse(text="c('Jan 2009',' Dec 2009',' Jul 2010')")))
list(eval(parse(text="c('Jan 2009',' Dec 2009',' Jul 2010')")))
heatmapEco(value ~ CrS(variable,variable):YEAR, obj, grp.func=function(...) if (all(is.na(...))) NA else sum(..., na.rm=TRUE), t.fmt="%Y", t.per="year", count=T, factor.ax=T, custom.f=c(0,0.001, 0.022, 0.36, 0.7), split.x=10, outliers=T, pol.break=c("Jan 1963"), zlab="Measles Incidence (p100,000)", save="measlesRep.pdf")
eval()
library(heatmapEco)
heatmapEco(value ~ CrS(variable,variable):YEAR, obj, grp.func=function(...) if (all(is.na(...))) NA else sum(..., na.rm=TRUE), t.fmt="%Y", t.per="year", count=T, factor.ax=T, custom.f=c(0,0.001, 0.022, 0.36, 0.7), split.x=10, outliers=T, pol.break=c("Jan 1963"), zlab="Measles Incidence (p100,000)", save="measlesRep.pdf")
?source
heatmapEco(value ~ CrS(variable,variable):YEAR, obj, grp.func=function(...) if (all(is.na(...))) NA else sum(..., na.rm=TRUE), t.fmt="%Y", t.per="year", count=T, factor.ax=T, custom.f=c(0,0.001, 0.022, 0.36, 0.7), split.x=10, outliers=T, pol.break=c("Jan 1963"), zlab="Measles Incidence (p100,000)", save="measlesRep.pdf")
library(heatmapEco)
library(heatmapEco)
heatmapEco(value ~ CrS(variable,variable):YEAR, obj, grp.func=function(...) if (all(is.na(...))) NA else sum(..., na.rm=TRUE), t.fmt="%Y", t.per="year", count=T, factor.ax=T, custom.f=c(0,0.001, 0.022, 0.36, 0.7), split.x=10, outliers=T, pol.break=c("Jan 1963"), zlab="Measles Incidence (p100,000)", save="measlesRep.pdf")
library(heatmapEco)
library(heatmapEco)
heatmapEco(value ~ CrS(variable,variable):YEAR, obj, grp.func=function(...) if (all(is.na(...))) NA else sum(..., na.rm=TRUE), t.fmt="%Y", t.per="year", count=T, factor.ax=T, custom.f=c(0,0.001, 0.022, 0.36, 0.7), split.x=10, outliers=T, pol.break=c("Jan 1963"), zlab="Measles Incidence (p100,000)", save="measlesRep.pdf")
library(heatmapEco)
heatmapEco(value ~ CrS(variable,variable):YEAR, obj, grp.func=function(...) if (all(is.na(...))) NA else sum(..., na.rm=TRUE), t.fmt="%Y", t.per="year", count=T, factor.ax=T, custom.f=c(0,0.001, 0.022, 0.36, 0.7), split.x=10, outliers=T, pol.break=c("Jan 1963"), zlab="Measles Incidence (p100,000)", save="measlesRep.pdf")
?parseHeatform
?timeConv
library(heatmapEco)
seq(0, 100, 25)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
?seq
??summarise
library(heatmapEco)
?heatmapEco
?setupX
zoo::as.yearmon("6", "%Y")
zoo::as.yearmon("-1", "%Y")
zoo::as.yearmon("-2", "%Y")
zoo::as.yearmon("Mar 2016")
zoo::as.yearmon("2016-03-01")
zoo::as.yearmon("-2", "-%Y")
?install.packages
install.packages(c('repr', 'IRkernel', 'IRdisplay'), repos=c('http://irkernel.github.io', getOption('repos')))
IRKernel::installspec()
IRkernel::installspec()
IRkernel::installspec(name='ir32', displayname= 'R 3.2')
?IRkernel::installspec
IRkernel::installspec()
library(heatmapEco)
setwd("../test_heatmap/data")
library(data.table)
obj <- melt(fread("MEASLES_Incidence_1930-2003.csv"),
c(``YEAR'', ``WEEK''))
obj[, value := as.numeric(value)]
library(data.table)
obj <- melt(fread("MEASLES_Incidence_1930-2003.csv"),
c("YEAR", "WEEK"))
library(data.table)
obj <- melt(fread("MEASLES_Incidence_1930-2003.csv"),
c(``YEAR'', ``WEEK''))
obj[, value := as.numeric(value)]
obj
heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.022, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.022, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.022, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
q
heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.022, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.022, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.022, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
a[z == 0]
a[a$z == 0]
a
a$z
a[a$z == 0,]
ecdf(a$z)(0)
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.024, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.024, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.024, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.024, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.024, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.024, 0.36, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
ecdf(a$z)(1)
ecdf(a$z)(0)
ecdf(a$z)(0.1)
ecdf(a$z)(0.3)
ecdf(a$z)(0.5)
ecdf(a$z)(0.6)
ecdf(a$z)(1)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.1975, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
a
a$quantile
factor(a$quantile, levels=)
?rev
sort(levels(a$quantile))
sort(levels(a$quantile), decreasing=TRUE)
?relevel
?factor
factor(a$quantile, sort(levels(a$quantile), decreasing=TRUE))
a
a$quantile
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.1975, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.1975, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
save="measlesRep.pdf")
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0.001, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
ylabf <- factor(y$quantile)
?floor
seq(1, 6, 5)
seq(1, 5, 5)
seq(1, 2, 1)
seq(0, 1, 1)
seq(0, 25, 5)
seq(0, 25, 5)[1:]
seq(0, 25, 5)[1]
seq(0, 25, 5)[1:6]
seq(0, 25, 5)[2:6]
cut(seq(0,25,5))
cut(seq(0,25,5), breaks=1)
cut(seq(0,25,5), breaks=2)
, yval[length(yval)]
, yval[length(yval)]
, yval[length(yval)]
?heatmapEco
library(data.table)
b1 <- rep(rnorm(3e3, 0, 0.8), 10)
b2 <- rep(rnorm(3e3, 0, 0.2), 10)
test <- data.table(id=rep(1:3e3, 20), X=c(b1, b2), Y=rnorm(6e4,
c(- b1 / 2, -2.5 * b2), c(rep(1, 3e4), rep(5, 3e4))))
test$t <- as.vector(sapply(1:20, function(x) rep(x, 3e3)))
# Plot using heatmap, dividing instrument "X" in percentiles
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
pol.break=c(11,16), outliers=TRUE)
breaks
labels
labels
a
seq(0, 25, 5)[-1]
library(heatmapEco)
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
pol.break=c(11,16), outliers=TRUE)
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
pol.break=c(11,16), outliers=TRUE, save='test.pdf')
library(heatmapEco)
ylbf <- levels(factor(data$quantile))
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
pol.break=c(11,16), outliers=TRUE, save='test.pdf')
library(heatmapEco)
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
pol.break=c(11,16), outliers=TRUE, save='test.pdf')
?identity
library(heatmapEco)
ylbf <- levels(factor(data$quantile))
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
pol.break=c(11,16), outliers=TRUE, save='test.pdf')
library(heatmapEco)
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
pol.break=c(11,16), outliers=TRUE, save='test.pdf')
heatmapEco(Y ~ CrS(X,id):t, test, N=30,
pol.break=c(11,16), outliers=TRUE, save='test.pdf')
seq(0, 5, 5)
seq(0, 5, 6)
as.character(seq(0, 5, 6))
seq(0, 5, 4)
seq(0, 5, 5)
seq(0, 2, 5)
seq(0, 2, 2)
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
pol.break=c(11,16), outliers=TRUE, save='test.pdf')
heatmapEco(Y ~ CrS(X,id):t, test, N=20,
pol.break=c(11,16), outliers=TRUE, save='test.pdf')
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
a
?csv
?write.csv
write.csv(a, file="measles_out.csv")
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(rep(0.025, 3), 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0,0, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
a <- heatmapEco(value ~ CrS(variable,variable):YEAR, obj,
t.fmt="%Y", t.per="year", pol.break=c("Jan 1963"),
grp.func=function(...) if (all(is.na(...))) NA else sum(...,
na.rm=TRUE), count=T, factor.ax=T, outliers=T, split.x=10,
custom.f=c(0.001,0.01, 0.025, 0.45, 0.7),
zlab="Measles Incidence (p100,000)",
save="measlesRep.pdf")
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
library(heatmapEco)
p <- "c(0.3, 0.4)"
p
eval(parse(text=0))
eval(parse(text=p))
