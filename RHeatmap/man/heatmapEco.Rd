% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmap.R
\name{heatmapEco}
\alias{heatmapEco}
\title{Master heatmap function.}
\usage{
heatmapEco(relation, data, xq, controls = NULL, absorb = NULL, N = 0,
  q.probs, grp.func = mean, t.fmt = "\%Y", t.per = "year",
  factor.ax = F, pol.break = "", outliers, count = F, split.x, split.y,
  custom.f, zlab = "Mean Outcomes", fname, save)
}
\arguments{
\item{relation}{Parsed formula. See \code{\link{parseHeatform}} for details.}

\item{data}{data.frame or data.table object. Should have columns
corresponding to the X, Y and fill axes at the minimum.}

\item{xq}{The name of the instrument/factor variable, if importing an
external cleaned file. Mostly relevant for other programs calling this
package in a script.}

\item{controls}{Controls from which the dependent variable and the instrument
are residualized (NOT IMPLEMENTED).}

\item{absorb}{Factor variables from which the dependent variable and the
instrument are residualized (NOT IMPLEMENTED).}

\item{N}{Number of quantiles to split a continuous instrument.}

\item{q.probs}{Vector of probabilities through which custom cutpoints could
be used for dividing the instrument.}

\item{grp.func}{Aggregation function over each
time/index X instrument/factor bin. Most summary functions in R, mathematical
transformations and compositions thereof are admissible.}

\item{t.fmt}{If a time axis is to be used, the string formatting in the
time column. Ensure all values in the column have the same formatting.}

\item{t.per}{Time interval - should each division of the X-axis represent
a month, quarter or year?}

\item{factor.ax}{If \code{TRUE}, interprets variable column as a factor for
aggregation and options.}

\item{pol.break}{A vector of strings in the same formatting as the X axis
that lists where vertical lines should be added.}

\item{outliers}{If \code{TRUE}, expands colour palette to emphasize
outliers. See \code{\link{setupFill}} for more details.}

\item{count}{If \code{TRUE}, uses an alternative palette for count data.
See \code{\link{setupFill}} for more details.}

\item{split.x}{Custom value declaring spacing between X axis ticks.}

\item{split.y}{Custom value declaring spacing between Y axis ticks.}

\item{custom.f}{Vector of percentages where the palette composing
the colour gradient should be placed. Most useful for data with
many zero values.}

\item{zlab}{Label for the fill variable to be placed above the legend.}

\item{fname}{Location of an external, collapsed CSV dataset to be entered into R for plotting.}

\item{save}{File to which graph is exported using ggsave.}
}
\value{
Collapsed data.frame with columns "time", "y", "quantile," to be
reused for tweaking purposes.
}
\description{
\code{heatmapEco} takes in (panel) data, aggregates it, and customizes a
heatmap output according to function options.
}
\details{
While heatmap can perform much of the data cleaning, it is still important
to clean the data to the point where the values of the instrument/factor
are all within one column, and to unite date columns into one time format
if time is to be used as an axis.

\code{heatmapEco} can still be called to handle already cleaned data stored
outside of R: use the fname and xq arguments. Those two arguments also
facilitate compatability with Stata and Python.
}
\examples{
# Generate a rather silly panel
library(data.table)
b1 <- rep(rnorm(3e3, 0, 0.8), 10)
b2 <- rep(rnorm(3e3, 0, 0.2), 10)
test <- data.table(id=rep(1:3e3, 20), X=c(b1, b2), Y=rnorm(6e4,
                   c(- b1 / 2, -2.5 * b2), c(rep(1, 3e4), rep(5, 3e4))))
test$t <- as.vector(sapply(1:20, function(x) rep(x, 3e3)))

# Plot using heatmap, dividing instrument "X" in percentiles
heatmapEco(Y ~ CrS(X,id):t, test, N=100,
                    pol.break=c(11,16), outliers=TRUE)
}

